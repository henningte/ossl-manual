library("rbookdown")
library("bookdown")
bookdown::gitbook("index.Rmd")
bookdown::bookdown_site()
bookdown::bookdown_site("index.Rmd")
gc()
2/100*1200
2/100*1200*0.3
2/100*1200*0.3*10
source('~/.active-rstudio-document', echo=TRUE)
OCSKGM(20, 1200, ORCDRC.sd = 2.5)
OCSKGM(20, 1200, ORCDRC.sd = 3.2)
OCSKGM(20, 1200, ORCDRC.sd = 8.3)
OCSKGM(10, 1200, ORCDRC.sd = 8.3)
OCSKGM(10, 1200, ORCDRC.sd = 5.1)
OCSKGM(10, 1200, ORCDRC.sd = 3.1)
OCSKGM(10, 1200, ORCDRC.sd = 8.3)
OCSKGM(20, 1200, ORCDRC.sd = 8.3)
sqrt(11+11)
install.packages("emo")
install.packages("emo", repos = "https://cloud.r-project.org/")
devtools::install_github("hadley/emo")
devtools::install_github("hadley/emo")
?plotKML::kml_layer
19860+21859
knitr::include_graphics("img/design_soil_om_sheme.png")
library(captioner)
library(openair)
fig_nums <- captioner(prefix = "Fig.")
source("R/ossl_functions.R")
kssl.yw = readRDS(url("http://s3.us-east-1.wasabisys.com/soilspectroscopy/ossl_import/ossl_soillab_v1.rds", "rb"))
kssl.sitef = readRDS(url("http://s3.us-east-1.wasabisys.com/soilspectroscopy/ossl_import/ossl_soilsite_v1.rds", "rb"))
kssl.yw$layer.upper.depth_usda_cm = plyr::join(kssl.yw["id.layer_uuid_c"], kssl.sitef, match="first")$layer.upper.depth_usda_cm
kssl.yw$layer.lower.depth_usda_cm = plyr::join(kssl.yw["id.layer_uuid_c"], kssl.sitef, match="first")$layer.lower.depth_usda_cm
kssl.yw$depth = kssl.yw$layer.upper.depth_usda_cm + (kssl.yw$layer.lower.depth_usda_cm - kssl.yw$layer.upper.depth_usda_cm)/2
kssl.yw$dataset.code_ascii_c = plyr::join(kssl.yw["id.layer_local_c"], kssl.sitef, match="first")$dataset.code_ascii_c
kssl.yw = kssl.yw[!is.na(kssl.yw$dataset.code_ascii_c),]
library(ggplot2)
library(viridis)
library(ggridges)
## log-normal variables
for(j in c("wpg2_usda.3a2_wpct", "ecec_usda.4b4_cmolkg", "ec.w_usda.4f1_dsm", "oc_usda.calc_wpct",
"ca.ext_usda.4b1_cmolkg", "c.tot_usda.4h2_wpct", "caco3_usda.4e1_wpct", "cec.ext_usda.4b1_cmolkg",
"sum.bases_4b4b2a_cmolkg", "mg.ext_usda.4b1_cmolkg", "n.tot_usda.4h2_wpct",
"al.kcl_usda.4b3_cmolkg", "p.meh3_usda.4d6_mgkg", "k.meh3_usda.4d6_mgkg",
"na.meh3_usda.4d6_mgkg", "mg.meh3_usda.4d6_mgkg", "fe.meh3_usda.4d6_mgkg")){
out.png = paste0("./hist/", j, "_hist.png")
if(!file.exists(out.png)){
sel.df = kssl.yw[,c("dataset.code_ascii_c", j)]
sel.df$response = sel.df[,2]+1
ggplot(sel.df, aes(x = response, y = dataset.code_ascii_c, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_x_continuous(trans='log2') +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = j, option = "C") +
labs(
title = j
) +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
ggsave(out.png, width = 7, height = 7)
}
}
## without log-transform
kssl.yw$silt.tot_usda.3a1_wpct = ifelse(kssl.yw$silt.tot_usda.3a1_wpct>100, 100, kssl.yw$silt.tot_usda.3a1_wpct)
for(j in c("sand.tot_usda.3a1_wpct", "silt.tot_usda.3a1_wpct", "clay.tot_usda.3a1_wpct",
"bd.od_usda.3b2_gcm3", "ph.kcl_usda.4c1_index", "ph.h2o_usda.4c1_index",
"ph.cacl2_usda.4c1_index", "wr.33kbar_usda.3c1_wpct", "wr.1500kbar_usda.3c2_wpct")){
out.png = paste0("./hist/", j, "_hist.png")
if(!file.exists(out.png)){
sel.df = kssl.yw[,c("dataset.code_ascii_c", j)]
sel.df$response = sel.df[,2]
ggplot(sel.df, aes(x = response, y = dataset.code_ascii_c, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = j, option = "C") +
labs(
title = j
) +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
ggsave(out.png, width = 7, height = 7)
}
}
library(ggplot2)
library(viridis)
library(ggridges)
## log-normal variables
for(j in c("wpg2_usda.3a2_wpct", "ecec_usda.4b4_cmolkg", "ec.w_usda.4f1_dsm", "oc_usda.calc_wpct",
"ca.ext_usda.4b1_cmolkg", "c.tot_usda.4h2_wpct", "caco3_usda.4e1_wpct", "cec.ext_usda.4b1_cmolkg",
"sum.bases_4b4b2a_cmolkg", "mg.ext_usda.4b1_cmolkg", "n.tot_usda.4h2_wpct",
"al.kcl_usda.4b3_cmolkg", "p.meh3_usda.4d6_mgkg", "k.meh3_usda.4d6_mgkg",
"na.meh3_usda.4d6_mgkg", "mg.meh3_usda.4d6_mgkg", "fe.meh3_usda.4d6_mgkg", "gyp_usda.4e2_wpct")){
out.png = paste0("./hist/", j, "_hist.png")
if(!file.exists(out.png)){
sel.df = kssl.yw[,c("dataset.code_ascii_c", j)]
sel.df$response = sel.df[,2]+1
ggplot(sel.df, aes(x = response, y = dataset.code_ascii_c, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_x_continuous(trans='log2') +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = j, option = "C") +
labs(
title = j
) +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
ggsave(out.png, width = 7, height = 7)
}
}
## without log-transform
kssl.yw$silt.tot_usda.3a1_wpct = ifelse(kssl.yw$silt.tot_usda.3a1_wpct>100, 100, kssl.yw$silt.tot_usda.3a1_wpct)
for(j in c("sand.tot_usda.3a1_wpct", "silt.tot_usda.3a1_wpct", "clay.tot_usda.3a1_wpct",
"bd.od_usda.3b2_gcm3", "ph.kcl_usda.4c1_index", "ph.h2o_usda.4c1_index",
"ph.cacl2_usda.4c1_index", "wr.33kbar_usda.3c1_wpct", "wr.1500kbar_usda.3c2_wpct")){
out.png = paste0("./hist/", j, "_hist.png")
if(!file.exists(out.png)){
sel.df = kssl.yw[,c("dataset.code_ascii_c", j)]
sel.df$response = sel.df[,2]
ggplot(sel.df, aes(x = response, y = dataset.code_ascii_c, fill = ..x..)) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0)) +
scale_fill_viridis(name = j, option = "C") +
labs(
title = j
) +
theme_ridges(font_size = 13, grid = TRUE) + theme(axis.title.y = element_blank())
ggsave(out.png, width = 7, height = 7)
}
}
